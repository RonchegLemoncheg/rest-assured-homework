/*
 * Spring Security 6+ APP
 * Spring Boot 3+ Spring Security 6+ example
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package localhost.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RefreshTokenResponse
 */
@JsonPropertyOrder({
  RefreshTokenResponse.JSON_PROPERTY_ACCESS_TOKEN,
  RefreshTokenResponse.JSON_PROPERTY_REFRESH_TOKEN,
  RefreshTokenResponse.JSON_PROPERTY_TOKEN_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-30T11:49:18.045515100+04:00[Asia/Dubai]", comments = "Generator version: 7.11.0")
public class RefreshTokenResponse {
  public static final String JSON_PROPERTY_ACCESS_TOKEN = "access_token";
  @jakarta.annotation.Nullable
  private String accessToken;

  public static final String JSON_PROPERTY_REFRESH_TOKEN = "refresh_token";
  @jakarta.annotation.Nullable
  private String refreshToken;

  public static final String JSON_PROPERTY_TOKEN_TYPE = "token_type";
  @jakarta.annotation.Nullable
  private String tokenType;

  public RefreshTokenResponse() {
  }

  public RefreshTokenResponse accessToken(@jakarta.annotation.Nullable String accessToken) {
    
    this.accessToken = accessToken;
    return this;
  }

  /**
   * Get accessToken
   * @return accessToken
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessToken() {
    return accessToken;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessToken(@jakarta.annotation.Nullable String accessToken) {
    this.accessToken = accessToken;
  }

  public RefreshTokenResponse refreshToken(@jakarta.annotation.Nullable String refreshToken) {
    
    this.refreshToken = refreshToken;
    return this;
  }

  /**
   * Get refreshToken
   * @return refreshToken
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRefreshToken() {
    return refreshToken;
  }


  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefreshToken(@jakarta.annotation.Nullable String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public RefreshTokenResponse tokenType(@jakarta.annotation.Nullable String tokenType) {
    
    this.tokenType = tokenType;
    return this;
  }

  /**
   * Get tokenType
   * @return tokenType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOKEN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTokenType() {
    return tokenType;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTokenType(@jakarta.annotation.Nullable String tokenType) {
    this.tokenType = tokenType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefreshTokenResponse refreshTokenResponse = (RefreshTokenResponse) o;
    return Objects.equals(this.accessToken, refreshTokenResponse.accessToken) &&
        Objects.equals(this.refreshToken, refreshTokenResponse.refreshToken) &&
        Objects.equals(this.tokenType, refreshTokenResponse.tokenType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, refreshToken, tokenType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefreshTokenResponse {\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

