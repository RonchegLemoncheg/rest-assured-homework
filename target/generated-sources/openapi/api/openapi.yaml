openapi: 3.0.1
info:
  description: Spring Boot 3+ Spring Security 6+ example
  title: Spring Security 6+ APP
  version: 0.0.1-SNAPSHOT
servers:
- description: Development
  url: http://localhost:8086
security:
- bearerAuth: []
tags:
- description: "The Authentication API. Contains operations like login, logout, refresh-token\
    \ etc."
  name: Authentication
- description: The Authorization API. Contains a secure hello method
  name: Authorization
paths:
  /api/v1/user/resource:
    post:
      operationId: sayHelloWithRoleUserAndCreateAuthority
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - Authorization
      x-accepts:
      - '*/*'
    put:
      operationId: sayHelloWithRoleUserAndUpdateAuthority
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - Authorization
      x-accepts:
      - '*/*'
  /api/v1/auth/register:
    post:
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: OK
      security: []
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /api/v1/auth/refresh-token:
    post:
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
          description: OK
      security: []
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /api/v1/auth/refresh-token-cookie:
    post:
      operationId: refreshTokenCookie
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          description: OK
      security: []
      tags:
      - Authentication
      x-accepts:
      - '*/*'
  /api/v1/auth/logout:
    post:
      operationId: logout
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          description: OK
      security: []
      tags:
      - Authentication
      x-accepts:
      - '*/*'
  /api/v1/auth/authenticate:
    post:
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      security: []
      tags:
      - Authentication
      x-content-type: application/json
      x-accepts:
      - '*/*'
      - application/json
  /api/v1/auth/info:
    get:
      operationId: getAuthentication
      parameters:
      - explode: true
        in: query
        name: request
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationRequest'
        style: form
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content: {}
          description: OK
      security: []
      tags:
      - Authentication
      x-accepts:
      - '*/*'
  /api/v1/admin/resource:
    delete:
      operationId: sayHelloWithRoleAdminAndDeleteAuthority
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - Authorization
      x-accepts:
      - '*/*'
    get:
      description: "This endpoint require a valid JWT, ADMIN role with READ_PRIVILEGE"
      operationId: sayHelloWithRoleAdminAndReadAuthority
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/sayHelloWithRoleUserAndUpdateAuthority_400_response'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: Success
        "401":
          content:
            '*/*':
              schema:
                type: string
          description: Unauthorized / Invalid Token
      summary: Hello secured endpoint
      tags:
      - Authorization
      x-accepts:
      - '*/*'
components:
  schemas:
    ErrorResponse:
      example:
        path: path
        error: error
        message: message
        status: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          format: int32
          type: integer
        error:
          type: string
        timestamp:
          format: date-time
          type: string
        message:
          type: string
        path:
          type: string
      type: object
    RegisterRequest:
      example:
        firstname: firstname
        password: password
        role: ADMIN
        email: email
        lastname: lastname
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          enum:
          - ADMIN
          - USER
          type: string
      required:
      - email
      - firstname
      - lastname
      - password
      - role
      type: object
    AuthenticationResponse:
      example:
        access_token: access_token
        refresh_token: refresh_token
        roles:
        - roles
        - roles
        id: 0
        token_type: token_type
        email: email
      properties:
        id:
          format: int64
          type: integer
        email:
          type: string
        roles:
          items:
            type: string
          type: array
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
      type: object
    RefreshTokenRequest:
      example:
        refreshToken: refreshToken
      properties:
        refreshToken:
          type: string
      type: object
    RefreshTokenResponse:
      example:
        access_token: access_token
        refresh_token: refresh_token
        token_type: token_type
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
      type: object
    ContentDisposition:
      properties:
        type:
          type: string
        name:
          type: string
        filename:
          type: string
        charset:
          type: string
        size:
          deprecated: true
          format: int64
          type: integer
        creationDate:
          deprecated: true
          format: date-time
          type: string
        modificationDate:
          deprecated: true
          format: date-time
          type: string
        readDate:
          deprecated: true
          format: date-time
          type: string
        formData:
          type: boolean
        inline:
          type: boolean
        attachment:
          type: boolean
      type: object
    HttpMethod:
      type: object
    HttpRange:
      type: object
    HttpStatusCode:
      properties:
        error:
          type: boolean
        is2xxSuccessful:
          type: boolean
        is3xxRedirection:
          type: boolean
        is4xxClientError:
          type: boolean
        is5xxServerError:
          type: boolean
        is1xxInformational:
          type: boolean
      type: object
    MediaType:
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
        qualityValue:
          format: double
          type: number
        charset:
          type: string
        concrete:
          type: boolean
        wildcardSubtype:
          type: boolean
        wildcardType:
          type: boolean
        subtypeSuffix:
          type: string
      type: object
    ProblemDetail:
      properties:
        type:
          format: uri
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          format: uri
          type: string
        properties:
          additionalProperties:
            type: object
          type: object
      type: object
    AuthenticationRequest:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    sayHelloWithRoleUserAndUpdateAuthority_400_response:
      oneOf:
      - additionalProperties:
          type: string
        type: object
      - type: string
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      description: JWT auth description
      in: header
      scheme: bearer
      type: http

